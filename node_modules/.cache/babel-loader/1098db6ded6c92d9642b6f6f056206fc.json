{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\miayn\\\\Documents\\\\Extracurricular\\\\Programming\\\\Node\\\\Lab-Hours-Tracker\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 7,\n  columnNumber: 5\n}, this), document.getElementById('root'));\n\nconst express = require('express');\n\nconst db = require('./config/db');\n\nconst cors = require('cors');\n\nconst app = express();\nconst PORT = 3002;\napp.use(cors());\napp.use(express.json()); // Route to get all posts\n\napp.get(\"/api/get\", (req, res) => {\n  db.query(\"SELECT * FROM posts\", (err, result) => {\n    if (err) {\n      console.log(err);\n    }\n\n    res.send(result);\n  });\n}); // Route to get one post\n\napp.get(\"/api/getFromId/:id\", (req, res) => {\n  const id = req.params.id;\n  db.query(\"SELECT * FROM posts WHERE id = ?\", id, (err, result) => {\n    if (err) {\n      console.log(err);\n    }\n\n    res.send(result);\n  });\n}); // Route for creating the post\n\napp.post('/api/create', (req, res) => {\n  const username = req.body.userName;\n  const title = req.body.title;\n  const text = req.body.text;\n  db.query(\"INSERT INTO posts (title, post_text, user_name) VALUES (?,?,?)\", [title, text, username], (err, result) => {\n    if (err) {\n      console.log(err);\n    }\n\n    console.log(result);\n  });\n}); // Route to like a post\n\napp.post('/api/like/:id', (req, res) => {\n  const id = req.params.id;\n  db.query(\"UPDATE posts SET likes = likes + 1 WHERE id = ?\", id, (err, result) => {\n    if (err) {\n      console.log(err);\n    }\n\n    console.log(result);\n  });\n}); // Route to delete a post\n\napp.delete('/api/delete/:id', (req, res) => {\n  const id = req.params.id;\n  db.query(\"DELETE FROM posts WHERE id= ?\", id, (err, result) => {\n    if (err) {\n      console.log(err);\n    }\n  });\n});\napp.listen(PORT, () => {\n  console.log(`Server is running on ${PORT}`);\n});","map":{"version":3,"sources":["C:/Users/miayn/Documents/Extracurricular/Programming/Node/Lab-Hours-Tracker/src/index.js"],"names":["React","ReactDOM","App","render","document","getElementById","express","require","db","cors","app","PORT","use","json","get","req","res","query","err","result","console","log","send","id","params","post","username","body","userName","title","text","delete","listen"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n\nconst express = require('express');\nconst db = require('./config/db')\nconst cors = require('cors')\n\nconst app = express();\nconst  PORT = 3002;\napp.use(cors());\napp.use(express.json())\n\n// Route to get all posts\napp.get(\"/api/get\", (req,res)=>{\ndb.query(\"SELECT * FROM posts\", (err,result)=>{\n    if(err) {\n    console.log(err)\n    } \nres.send(result)\n});   });\n\n// Route to get one post\napp.get(\"/api/getFromId/:id\", (req,res)=>{\n\nconst id = req.params.id;\n db.query(\"SELECT * FROM posts WHERE id = ?\", id, \n (err,result)=>{\n    if(err) {\n    console.log(err)\n    } \n    res.send(result)\n    });   });\n\n// Route for creating the post\napp.post('/api/create', (req,res)=> {\n\nconst username = req.body.userName;\nconst title = req.body.title;\nconst text = req.body.text;\n\ndb.query(\"INSERT INTO posts (title, post_text, user_name) VALUES (?,?,?)\",[title,text,username], (err,result)=>{\n   if(err) {\n   console.log(err)\n   } \n   console.log(result)\n});   })\n\n// Route to like a post\napp.post('/api/like/:id',(req,res)=>{\n\nconst id = req.params.id;\ndb.query(\"UPDATE posts SET likes = likes + 1 WHERE id = ?\",id, (err,result)=>{\n    if(err) {\n   console.log(err)   } \n   console.log(result)\n    });    \n});\n\n// Route to delete a post\n\napp.delete('/api/delete/:id',(req,res)=>{\nconst id = req.params.id;\n\ndb.query(\"DELETE FROM posts WHERE id= ?\", id, (err,result)=>{\nif(err) {\nconsole.log(err)\n        } }) })\n\napp.listen(PORT, ()=>{\n    console.log(`Server is running on ${PORT}`)\n})\n"]},"metadata":{},"sourceType":"module"}