{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\miayn\\\\Documents\\\\Extracurricular\\\\Programming\\\\Node\\\\lab_hours_form\\\\form\\\\src\\\\App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar tableRowIndex = 0;\n\nfunction TableRow(_ref) {\n  _s();\n\n  let {\n    row,\n    handleDataChange,\n    deleteRow\n  } = _ref;\n  const index = row.index;\n  const [first_name, handleChangeFirstName] = useState(row.first_name);\n  const [last_name, handleChangeLastName] = useState(row.last_name);\n\n  const updateValues = e => {\n    var inputName = e.target.name;\n    var inputValue = e.target.value;\n\n    if (inputName == 'first_name') {\n      handleChangeFirstName(inputValue);\n    } else if (inputName == 'last_name') {\n      handleChangeLastName(inputValue);\n    }\n\n    handleDataChange({\n      index: index,\n      first_name: first_name,\n      last_name: last_name\n    });\n  };\n\n  const removeRow = () => {\n    deleteRow(index);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: index + 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"first_name\",\n        className: \"first_name\",\n        placeholder: \"First Name\",\n        value: first_name,\n        onChange: updateValues\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"last_name\",\n        className: \"last_name\",\n        placeholder: \"Last Name\",\n        value: last_name,\n        onChange: updateValues\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-remove\",\n        onClick: removeRow,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TableRow, \"svCjnJv4DjOboTEIPvqPpuPhjvE=\");\n\n_c = TableRow;\n\nfunction Table() {\n  _s2();\n\n  const [talbeRows, setRows] = useState([{\n    index: 0,\n    first_name: \"\",\n    last_name: \"\"\n  }]); // Receive data from TableRow \n\n  const handleChange = data => {\n    talbeRows[data.index] = data;\n  }; // Add New Table Row\n\n\n  const addNewRow = () => {\n    tableRowIndex = parseFloat(tableRowIndex) + 1;\n    var updatedRows = [...talbeRows];\n    updatedRows[tableRowIndex] = {\n      index: tableRowIndex,\n      first_name: \"\",\n      last_name: \"\"\n    };\n    setRows(updatedRows);\n  }; // Remove Table row if rows are count is more than 1\n\n\n  const deleteRow = index => {\n    if (talbeRows.length > 1) {\n      var updatedRows = [...talbeRows];\n      var indexToRemove = updatedRows.findIndex(x => x.index == index);\n\n      if (indexToRemove > -1) {\n        updatedRows.splice(indexToRemove, 1);\n        setRows(updatedRows);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"customers\",\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      id: \"customers\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: talbeRows.map((row, index) => {\n          if (row) return /*#__PURE__*/_jsxDEV(TableRow, {\n            row: row,\n            handleDataChange: handleChange,\n            deleteRow: deleteRow\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 19\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-add\",\n        onClick: addNewRow,\n        children: \"+Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Table, \"73xi6qt1NilzlUAy6OOb6H5qx40=\");\n\n_c2 = Table;\nexport default Table;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TableRow\");\n$RefreshReg$(_c2, \"Table\");","map":{"version":3,"sources":["C:/Users/miayn/Documents/Extracurricular/Programming/Node/lab_hours_form/form/src/App.js"],"names":["React","useState","tableRowIndex","TableRow","row","handleDataChange","deleteRow","index","first_name","handleChangeFirstName","last_name","handleChangeLastName","updateValues","e","inputName","target","name","inputValue","value","removeRow","Table","talbeRows","setRows","handleChange","data","addNewRow","parseFloat","updatedRows","length","indexToRemove","findIndex","x","splice","map"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nvar tableRowIndex = 0;\nfunction TableRow({ row, handleDataChange, deleteRow }) {\n  const index = row.index\n  const [first_name, handleChangeFirstName] = useState(row.first_name);\n  const [last_name, handleChangeLastName] = useState(row.last_name);\n\n  const updateValues = e => {\n    var inputName = e.target.name\n    var inputValue = e.target.value\n    if (inputName == 'first_name') {\n      handleChangeFirstName(inputValue)\n    } else if (inputName == 'last_name') {\n      handleChangeLastName(inputValue)\n    }\n\n    handleDataChange({\n      index: index,\n      first_name: first_name,\n      last_name: last_name\n    })\n  }\n\n  const removeRow = () => {\n    deleteRow(index)\n  }\n\n  return (\n    <tr>\n      <td>{index + 1}</td>\n      <td>\n        <input type=\"text\" name=\"first_name\" className=\"first_name\" placeholder=\"First Name\" value={first_name} onChange={updateValues}></input>\n        <input type=\"text\" name=\"last_name\" className=\"last_name\" placeholder=\"Last Name\" value={last_name} onChange={updateValues}></input>\n      </td>\n      <td><button type=\"button\" className=\"btn btn-remove\" onClick={removeRow}>&times;</button></td>\n    </tr>\n  )\n}\n\nfunction Table() {\n  const [talbeRows, setRows] = useState([{\n    index: 0,\n    first_name: \"\",\n    last_name: \"\"\n  }\n  ]);\n\n  // Receive data from TableRow \n  const handleChange = data => {\n    talbeRows[data.index] = data\n  }\n\n  // Add New Table Row\n  const addNewRow = () => {\n    tableRowIndex = parseFloat(tableRowIndex) + 1\n    var updatedRows = [...talbeRows]\n    updatedRows[tableRowIndex] = { index: tableRowIndex, first_name: \"\", last_name: \"\" }\n    setRows(updatedRows)\n  }\n\n  // Remove Table row if rows are count is more than 1\n  const deleteRow = (index) => {\n    if (talbeRows.length > 1) {\n      var updatedRows = [...talbeRows]\n      var indexToRemove = updatedRows.findIndex(x => x.index == index);\n      if (indexToRemove > -1) {\n        updatedRows.splice(indexToRemove, 1)\n        setRows(updatedRows);\n      }\n    }\n  }\n\n  return (\n    <div className=\"customers\">\n      <table className=\"table\" id=\"customers\">\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>Name</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          {\n            talbeRows.map((row, index) => {\n              if (row)\n                return (\n                  <TableRow key={index} row={row} handleDataChange={handleChange} deleteRow={deleteRow}></TableRow>\n                )\n            })\n          }\n        </tbody>\n      </table>\n      <div>\n        <button className=\"btn-add\" onClick={addNewRow}>+Add</button>\n      </div>\n    </div>\n  );\n}\n\nexport default Table;"]},"metadata":{},"sourceType":"module"}