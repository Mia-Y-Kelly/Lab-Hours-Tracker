{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\miayn\\\\Documents\\\\Extracurricular\\\\Programming\\\\Node\\\\lab_hours_form\\\\form\\\\src\\\\App.js\";\n//Reference used https://www.pluralsight.com/guides/creating-dynamic-editable-tables-with-reactjs\n//https://www.pluralsight.com/guides/extracting-input-from-a-form-with-reactjs\nimport React from 'react';\nimport reactDom from 'react-dom';\nimport UpdateRows from './components/UpdateRows';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      customer: {\n        date: props.date,\n        name: props.name,\n        time: props.time\n      }\n    };\n  }\n\n  handleDateChanged(event) {\n    var customer = this.state.customer;\n    customer.date = event.target.value;\n    this.setState({\n      customer: customer\n    });\n  }\n\n  handleNameChanged(event) {\n    var customer = this.state.customer;\n    customer.name = event.target.value;\n    this.setState({\n      customer: customer\n    });\n  }\n\n  handleTimeChanged(event) {\n    var customer = this.state.customer;\n    customer.time = event.target.value;\n    this.setState({\n      customer: customer\n    });\n  }\n\n  handleButtonClicked() {\n    console.log(this.state.customer);\n    reactDom.render( /*#__PURE__*/_jsxDEV(UpdateRows, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 25\n    }, this), document.getElementById('table'));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: this.state.customer.date,\n        onChange: this.handleDateChanged.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: this.state.customer.name,\n        onChange: this.handleNameChanged.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Time:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: this.state.customer.time,\n        onChange: this.handleTimeChanged.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleButtonClicked.bind(this),\n        children: \"Save Record\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/miayn/Documents/Extracurricular/Programming/Node/lab_hours_form/form/src/App.js"],"names":["React","reactDom","UpdateRows","App","Component","constructor","props","state","customer","date","name","time","handleDateChanged","event","target","value","setState","handleNameChanged","handleTimeChanged","handleButtonClicked","console","log","render","document","getElementById","bind"],"mappings":"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","sourcesContent":["//Reference used https://www.pluralsight.com/guides/creating-dynamic-editable-tables-with-reactjs\n//https://www.pluralsight.com/guides/extracting-input-from-a-form-with-reactjs\nimport React from 'react';\nimport reactDom from 'react-dom';\nimport UpdateRows from './components/UpdateRows';\n\nexport default class App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            customer: {\n                date: props.date,\n                name: props.name,\n                time: props.time\n            }\n        }\n    }\n\n    handleDateChanged(event) {\n        var customer = this.state.customer;\n        customer.date = event.target.value;\n        this.setState({ customer: customer });\n    }\n\n    handleNameChanged(event) {\n        var customer = this.state.customer;\n        customer.name = event.target.value;\n        this.setState({ customer: customer });\n    }\n\n    handleTimeChanged(event) {\n        var customer = this.state.customer;\n        customer.time = event.target.value;\n        this.setState({ customer: customer });\n    }\n\n    handleButtonClicked() {\n        console.log(this.state.customer);\n        reactDom.render(<UpdateRows />, document.getElementById('table'));\n    }\n\n    render() {\n        return (\n            <div>\n                <label>\n                    Date\n                </label>\n                <input type=\"date\" value={this.state.customer.date} onChange={this.handleDateChanged.bind(this)} />\n                <br />\n                <label>\n                    Name:\n                </label>\n                <input type=\"text\" value={this.state.customer.name} onChange={this.handleNameChanged.bind(this)} />\n                <br />\n                <label>\n                    Time:\n                </label>\n                <input type=\"number\" value={this.state.customer.time} onChange={this.handleTimeChanged.bind(this)} />\n                <hr />\n                <button onClick={this.handleButtonClicked.bind(this)}>\n                    Save Record\n                </button>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}